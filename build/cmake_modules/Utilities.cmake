function(target_add_conditional_sources target condition_var)
   if(NOT ${condition_var})
      set_source_files_properties(${ARGN} PROPERTIES HEADER_FILE_ONLY TRUE)
   endif(NOT ${condition_var})
   set_property(TARGET ${target} APPEND PROPERTY SOURCES ${ARGN})
endfunction()

function(install_and_preserve_hierarchy destination)
   foreach(item ${ARGN})
      get_filename_component(item_path "${item}" PATH)
      install(FILES ${item} DESTINATION "${destination}/${item_path}")
   endforeach()
endfunction()

function(test_base target)
   add_executable(${target} ${ARGN})
   add_test(NAME ${target} COMMAND $<TARGET_FILE:${target}>)
   # Don't strip asserts in release builds
   target_compile_options(${target} PRIVATE -UNDEBUG)
   set_tests_properties(${target} PROPERTIES TIMEOUT 300)
endfunction()

function(add_fuzzing_executable target)
   add_executable(${target} ${ARGN})
   set_target_properties(${target} PROPERTIES LINKER_LANGUAGE "CXX")
   if(DEFINED ENV{LIB_FUZZING_ENGINE})
      target_link_libraries(${target} PRIVATE $ENV{LIB_FUZZING_ENGINE})
   else()
      # emulate libfuzzer entry point
      target_sources(${target} PRIVATE ${resiprocate_SOURCE_DIR}/build/oss-fuzz/main.cpp)
   endif()
endfunction()
